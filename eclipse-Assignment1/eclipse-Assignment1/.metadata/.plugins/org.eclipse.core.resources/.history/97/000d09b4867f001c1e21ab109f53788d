/**
 */
package Manufacture.impl;

import Manufacture.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class ManufactureFactoryImpl extends EFactoryImpl implements ManufactureFactory {
	/**
	 * Creates the default factory implementation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static ManufactureFactory init() {
		try {
			ManufactureFactory theManufactureFactory = (ManufactureFactory)EPackage.Registry.INSTANCE.getEFactory(ManufacturePackage.eNS_URI);
			if (theManufactureFactory != null) {
				return theManufactureFactory;
			}
		}
		catch (Exception exception) {
			EcorePlugin.INSTANCE.log(exception);
		}
		return new ManufactureFactoryImpl();
	}

	/**
	 * Creates an instance of the factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ManufactureFactoryImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EObject create(EClass eClass) {
		switch (eClass.getClassifierID()) {
			case ManufacturePackage.MANU_SYSTEM: return createManuSystem();
			case ManufacturePackage.STEP: return createStep();
			case ManufacturePackage.WORK_PIECE: return createWorkPiece();
			case ManufacturePackage.STORAGE: return createStorage();
			case ManufacturePackage.INTERMEDIATE_PRODUCT: return createIntermediateProduct();
			case ManufacturePackage.USABLE: return createUsable();
			case ManufacturePackage.HIERARCHY_STEP: return createHierarchyStep();
			case ManufacturePackage.MANU_STEP: return createManuStep();
			case ManufacturePackage.TRANS_STEP: return createTransStep();
			case ManufacturePackage.QA_STEP: return createQAStep();
			case ManufacturePackage.MATERIAL_CONDITIONER: return createMaterialConditioner();
			default:
				throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
		}
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ManuSystem createManuSystem() {
		ManuSystemImpl manuSystem = new ManuSystemImpl();
		return manuSystem;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Step createStep() {
		StepImpl step = new StepImpl();
		return step;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public WorkPiece createWorkPiece() {
		WorkPieceImpl workPiece = new WorkPieceImpl();
		return workPiece;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Storage createStorage() {
		StorageImpl storage = new StorageImpl();
		return storage;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public IntermediateProduct createIntermediateProduct() {
		IntermediateProductImpl intermediateProduct = new IntermediateProductImpl();
		return intermediateProduct;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Usable createUsable() {
		UsableImpl usable = new UsableImpl();
		return usable;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public HierarchyStep createHierarchyStep() {
		HierarchyStepImpl hierarchyStep = new HierarchyStepImpl();
		return hierarchyStep;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ManuStep createManuStep() {
		ManuStepImpl manuStep = new ManuStepImpl();
		return manuStep;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public TransStep createTransStep() {
		TransStepImpl transStep = new TransStepImpl();
		return transStep;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public QAStep createQAStep() {
		QAStepImpl qaStep = new QAStepImpl();
		return qaStep;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public MaterialConditioner createMaterialConditioner() {
		MaterialConditionerImpl materialConditioner = new MaterialConditionerImpl();
		return materialConditioner;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ManufacturePackage getManufacturePackage() {
		return (ManufacturePackage)getEPackage();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @deprecated
	 * @generated
	 */
	@Deprecated
	public static ManufacturePackage getPackage() {
		return ManufacturePackage.eINSTANCE;
	}

} //ManufactureFactoryImpl
